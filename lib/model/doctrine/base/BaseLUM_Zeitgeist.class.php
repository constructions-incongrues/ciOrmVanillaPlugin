<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LUM_Zeitgeist', 'doctrine');

/**
 * BaseLUM_Zeitgeist
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $zeitgeistid
 * @property boolean $ispublished
 * @property date $datestart
 * @property date $dateend
 * @property string $image
 * @property string $description
 * @property string $ananasexmachina
 * 
 * @method integer       getZeitgeistid()     Returns the current record's "zeitgeistid" value
 * @method boolean       getIspublished()     Returns the current record's "ispublished" value
 * @method date          getDatestart()       Returns the current record's "datestart" value
 * @method date          getDateend()         Returns the current record's "dateend" value
 * @method string        getImage()           Returns the current record's "image" value
 * @method string        getDescription()     Returns the current record's "description" value
 * @method string        getAnanasexmachina() Returns the current record's "ananasexmachina" value
 * @method LUM_Zeitgeist setZeitgeistid()     Sets the current record's "zeitgeistid" value
 * @method LUM_Zeitgeist setIspublished()     Sets the current record's "ispublished" value
 * @method LUM_Zeitgeist setDatestart()       Sets the current record's "datestart" value
 * @method LUM_Zeitgeist setDateend()         Sets the current record's "dateend" value
 * @method LUM_Zeitgeist setImage()           Sets the current record's "image" value
 * @method LUM_Zeitgeist setDescription()     Sets the current record's "description" value
 * @method LUM_Zeitgeist setAnanasexmachina() Sets the current record's "ananasexmachina" value
 * 
 * @package    admin-incongrue
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLUM_Zeitgeist extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('LUM_Zeitgeist');
        $this->hasColumn('zeitgeistid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ispublished', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('datestart', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('dateend', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('image', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ananasexmachina', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}