<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LUM_PollBlock', 'doctrine');

/**
 * BaseLUM_PollBlock
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $pollid
 * @property integer $userid
 * @property enum $blocked
 * @property string $remoteip
 * @property timestamp $datecreated
 * 
 * @method integer       getId()          Returns the current record's "id" value
 * @method integer       getPollid()      Returns the current record's "pollid" value
 * @method integer       getUserid()      Returns the current record's "userid" value
 * @method enum          getBlocked()     Returns the current record's "blocked" value
 * @method string        getRemoteip()    Returns the current record's "remoteip" value
 * @method timestamp     getDatecreated() Returns the current record's "datecreated" value
 * @method LUM_PollBlock setId()          Sets the current record's "id" value
 * @method LUM_PollBlock setPollid()      Sets the current record's "pollid" value
 * @method LUM_PollBlock setUserid()      Sets the current record's "userid" value
 * @method LUM_PollBlock setBlocked()     Sets the current record's "blocked" value
 * @method LUM_PollBlock setRemoteip()    Sets the current record's "remoteip" value
 * @method LUM_PollBlock setDatecreated() Sets the current record's "datecreated" value
 * 
 * @package    admin-incongrue
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLUM_PollBlock extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('LUM_PollBlock');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('pollid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('userid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('blocked', 'enum', 1, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => '1',
              1 => '0',
             ),
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('remoteip', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('datecreated', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}